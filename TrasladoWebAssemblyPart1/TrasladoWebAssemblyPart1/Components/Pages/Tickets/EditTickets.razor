@page "/EditTickets/{TicketId:int}";

@inject TicketsService ticketService;
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<EditForm Model="Tickets" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">

        <div class="card-header bg-primary text-white text-center py-2 rounded">
            <h3 style="font-weight: bold;" class="mb-0 font-weight-bold">Editar Ticket</h3>
        </div>

        <div class="card-body">

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="Fecha" class="form-label">Fecha:</label>
                    <InputDate @bind-Value="Tickets.Fecha" class="form-control" placeholder="Ingrese la Fecha" />
                    <ValidationMessage For="@(() => Tickets.Fecha)" />
                </div>

                <div class="col-md-6 mb-3">
                    <label for="ClienteId" class="form-label">Cliente Id:</label>
                    <InputNumber @bind-Value="Tickets.ClienteId" class="form-control" placeholder="Ingrese el Cliente Id" />
                    <ValidationMessage For="@(() => Tickets.ClienteId)" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="SistemaId" class="form-label">Sistema Id:</label>
                    <InputNumber @bind-Value="Tickets.SistemaId" class="form-control" placeholder="Ingrese el Sistema Id" />
                    <ValidationMessage For="@(() => Tickets.SistemaId)" />
                </div>

                <div class="col-md-6 mb-3">
                    <label for="PrioridadId" class="form-label">Prioridad Id:</label>
                    <InputNumber @bind-Value="Tickets.PrioridadId" class="form-control" placeholder="Ingrese el Prioridad Id" />
                    <ValidationMessage For="@(() => Tickets.PrioridadId)" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="SolicitadoPor" class="form-label">Solicitado Por:</label>
                    <InputText @bind-Value="Tickets.SolicitadoPor" class="form-control" placeholder="Ingrese el Solicitante" />
                    <ValidationMessage For="@(() => Tickets.SolicitadoPor)" />
                </div>

                <div class="col-md-6 mb-3">
                    <label for="Asunto" class="form-label">Asunto:</label>
                    <InputText @bind-Value="Tickets.Asunto" class="form-control" placeholder="Ingrese el Asunto" />
                    <ValidationMessage For="@(() => Tickets.Asunto)" />
                </div>

                <div class="col-md-6 mb-3">
                    <label for="Descripcion" class="form-label">Descripci&oacuten:</label>
                    <InputText @bind-Value="Tickets.Descripcion" class="form-control" placeholder="Ingrese la Descripci&oacuten" />
                    <ValidationMessage For="@(() => Tickets.Descripcion)" />
                </div>
            </div>

        </div>

        <!-- INICIO DETALLES DEL TICKET -->
        <div class="card-header bg-primary text-white text-center">
            <h3 style="font-weight: bold;" class="mb-0 font-weight-bold">Detalles del Ticket</h3>
        </div>

        <div class="modal-body">

            <div class="row">

                <div class="col">
                    <div>
                        <label class="fw-bold">Emisor:</label>
                        <InputText class="form-control mb-2" @bind-Value="detalles.Emisor"></InputText>
                    </div>
                    <div>
                        <label class="fw-bold">Mensaje:</label>
                        <InputTextArea class="form-control mb-2" @bind-Value="detalles.Mensaje"></InputTextArea>
                    </div>
                    <div class="text-end mb-2">
                        <button type="button" class="btn btn-success" @onclick="agregarDetalle"><i class="fas fa-plus"></i> Agregar</button>
                    </div>
                </div>

                <div class="col-5">
                    <div class="mb-4"></div>
                    <table class="table table-bordered text-center">

                        <thead class="bg-secondary text-white">
                            <tr>
                                <th class="col-3">Emisor</th>
                                <th class="col-7">Mensaje</th>
                                <th class="col-1">Eliminar</th>
                            </tr>
                        </thead>

                        <tbody>
                            @if (ListaDetalles.Any())
                            {
                                @foreach (var item in ListaDetalles)
                                {
                                    <tr>
                                        <td class="col-3">@item.Emisor</td>
                                        <td class="col-7">@item.Mensaje</td>
                                        <td class="col-1"><button type="button" style="background: transparent; border: none;" @onclick="(() => eliminarDetalle(item))"><img style="width: 32px; height: 32px;" src="./recursos/eliminar.png" alt="eliminar" /></button></td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr><td colspan="3">No hay mensajes...</td></tr>
                            }
                        </tbody>

                    </table>

                </div>
            </div>
        </div>
        <!-- FIN DETALLES DEL TICKET -->

        <div class="card-footer bg-light d-flex justify-content-end">
            <div class="btn-group">
                <a type="button" href="/TicketsIndex/" class="btn btn-outline-danger"><span class="fas fa-arrow-left"></span> Retroceder </a>
                <button type="submit" class="btn btn-outline-success"><span class="fas fa-save"></span> Guardar </button>
            </div>
        </div>
    </div>
</EditForm>


@code {

    public Tickets Tickets = new Tickets();
    public TicketsDetalles detalles = new TicketsDetalles();

    public List<TicketsDetalles> ListaDetalles = new List<TicketsDetalles>(); 

    [Parameter]
    public int TicketId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (TicketId > 0)
        {
            Tickets.TicketId = TicketId;
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var existe = await ticketService.Buscar(Tickets.TicketId);
        if (existe != null)
        {
            Tickets = existe;
        }
    }

    public async Task agregarDetalle()
    {
        if (!string.IsNullOrEmpty(detalles.Emisor) && !string.IsNullOrEmpty(detalles.Mensaje))
        {
            ListaDetalles.Add(new TicketsDetalles(0, detalles.Emisor, detalles.Mensaje));
            detalles.Emisor = "";
            detalles.Mensaje = "";
        }
        else
        {
            //await MostrarMensaje("Revise que los campos estén llenos...", "Inválido", "");
        }
    }

    public async Task eliminarDetalle(TicketsDetalles details)
    {
        detalles.Emisor = details.Emisor;
        detalles.Mensaje = details.Mensaje;

        /*
        var detalleEncontrado = await httpClient.GetFromJsonAsync<TicketsDetalles>("api/TicketsDetalles/" + details.Id);
        if (detalleEncontrado != null)
        {
            ListaDetallesEliminados.Add(new TicketsDetalles(details.Id, details.Emisor, details.Mensaje));
        }
        */
        ListaDetalles.Remove(details);
    }


    public async Task Guardar()
    {
        var guardo = await ticketService.Guardar(Tickets);
        if (guardo)
        {
            NavigationManager.NavigateTo("/TicketsIndex");
        }

    }

}


